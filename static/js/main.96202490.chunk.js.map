{"version":3,"sources":["user.ts","Brain.ts","Tracker.ts","Blocks.jsx","App.tsx","index.tsx","reportWebVitals.ts"],"names":["rand","arr","Math","floor","random","length","blockstackUser","window","localStorage","getItem","setItem","console","log","analytics","identify","user","Brain","state","mostRecentData","previousData","change","this","calcChange","speed","type","parameters","firstData","secondData","avgSpeed","totalMovementY","yPos","firstMovementY","data1","data2","xChange","xPos","yChange","x","y","Tracker","composite","body","draggingState","bodyToData","clearInterval","trackDragging","setInterval","nextBody","Composite","get","id","push","event","findDraggingSignificance","track","table","shouldStopTracking","droppedState","trackDropped","findDroppedSignificance","position","decomp","wallThickness","Blocks","boxRef","useRef","canvasRef","useEffect","current","boxWidth","offsetWidth","boxHeight","offsetHeight","boxCenter","stackLeft","stackWidth","engine","Engine","create","world","render","Render","element","undefined","canvas","options","width","height","background","wireframes","run","runner","Runner","World","add","Bodies","rectangle","isStatic","square","arrow","chevron","star","stack","Composites","color","Common","choose","fromVertices","fillStyle","strokeStyle","lineWidth","mouse","Mouse","mouseConstraint","MouseConstraint","constraint","stiffness","visible","Events","on","dragEnded","dragStarted","ref","style","App","chatClient","chatChannel","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","serverHost","chatChannelName","setupChannel","a","Promise","resolve","getMemberByIdentity","join","message","author","commentElement","document","querySelector","innerHTML","refreshToken","identity","fetch","r","json","data","updateToken","token","ReactDOM","StrictMode","getElementById","Client","client","getSubscribedChannels","getChannelByUniqueName","channel","catch","createChannel","uniqueName","friendlyName","createOrJoinChatChannel","error"],"mappings":"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","file":"static/js/main.96202490.chunk.js","sourcesContent":["const ADJECTIVES = [\n  'Abrasive', 'Brash', 'Callous', 'Daft', 'Eccentric', 'Fiesty', 'Golden',\n  'Holy', 'Ignominious', 'Joltin', 'Killer', 'Luscious', 'Mushy', 'Nasty',\n  'OldSchool', 'Pompous', 'Quiet', 'Rowdy', 'Sneaky', 'Tawdry',\n  'Unique', 'Vivacious', 'Wicked', 'Xenophobic', 'Yawning', 'Zesty',\n];\n\nconst FIRST_NAMES = [\n  'Anna', 'Bobby', 'Cameron', 'Danny', 'Emmett', 'Frida', 'Gracie', 'Hannah',\n  'Isaac', 'Jenova', 'Kendra', 'Lando', 'Mufasa', 'Nate', 'Owen', 'Penny',\n  'Quincy', 'Roddy', 'Samantha', 'Tammy', 'Ulysses', 'Victoria', 'Wendy',\n  'Xander', 'Yolanda', 'Zelda',\n];\n\nconst LAST_NAMES = [\n  'Anchorage', 'Berlin', 'Cucamonga', 'Davenport', 'Essex', 'Fresno',\n  'Gunsight', 'Hanover', 'Indianapolis', 'Jamestown', 'Kane', 'Liberty',\n  'Minneapolis', 'Nevis', 'Oakland', 'Portland', 'Quantico', 'Raleigh',\n  'SaintPaul', 'Tulsa', 'Utica', 'Vail', 'Warsaw', 'XiaoJin', 'Yale',\n  'Zimmerman',\n];\n\nconst rand = (arr: Array<string>) => arr[Math.floor(Math.random() * arr.length)];\n\nlet blockstackUser = window.localStorage.getItem('blockstackUser');\nif (!blockstackUser) {\n  blockstackUser = rand(ADJECTIVES) + rand(FIRST_NAMES) + rand(LAST_NAMES);\n  window.localStorage.setItem('blockstackUser', blockstackUser);\n}\n\nconsole.log('Segment Identify: ' + blockstackUser);\n(window as any).analytics.identify(blockstackUser);\n\nexport const user = blockstackUser;\n","import {Data} from './Tracker'\n\nexport type BrainEvent = {\n    type: 'Yanking' | 'Stacked' | 'Falling' | 'JustDropped'\n    parameters?: {}\n}\n\ntype Change = {\n    x: number,\n    y: number,\n    speed: number,\n}\n\nexport default class Brain {\n    public static findDraggingSignificance(state: Array<Data>): BrainEvent | null {\n        const secLapsed = state.length - 1\n        if (secLapsed < 1) {\n            return null\n        }\n        console.log('Analyzing dragging state', state)\n        const mostRecentData = state[state.length - 1]\n        const previousData = state[state.length - 2]\n        const change = this.calcChange(mostRecentData, previousData)\n\n        // console.log(`Change in postion ${change.x}, ${change.y}. Speed ${change.speed}`)\n\n        if (change.speed > 200) {\n            console.log('User is yanking a shape around.')\n            return {\n                type: 'Yanking',\n                parameters: {\n                    speed: change.speed,\n                }\n            }\n        }\n        return null\n    }\n\n    public static findDroppedSignificance(state: Array<Data>): BrainEvent | null {\n        const secLapsed = state.length - 1\n        if (secLapsed < 1) {\n            return null\n        }\n        const mostRecentData = state[state.length - 1]\n        const previousData = state[state.length - 2]\n        const firstData = state[0]\n        const secondData = state[1]\n        const change = this.calcChange(mostRecentData, previousData)\n        const avgSpeed = this.calcChange(mostRecentData, firstData).speed / state.length\n        const totalMovementY = firstData.yPos - mostRecentData.yPos\n        const firstMovementY = firstData.yPos - secondData.yPos\n\n        console.log('Analyzing dropped state', state)\n        console.log(avgSpeed)\n        console.log(totalMovementY)\n        console.log(!(state.length % 3))\n\n        if (firstMovementY < -80) {\n            console.log('User has simply dropped something.')\n            return {\n                type: 'JustDropped',\n                parameters: {\n                    // speed: change.speed,\n                }\n            }\n        }\n\n        // hasn't moved much on average and total movement hasn't gone down over 4 units\n        if (!(state.length % 3) && avgSpeed < 10 && totalMovementY > -4) {\n            console.log('User has stacked something.')\n            return {\n                type: 'Stacked',\n                parameters: {\n                    // speed: change.speed,\n                }\n            }\n        }\n\n        if (totalMovementY < -20) {\n            console.log('User has made something fall.')\n            return {\n                type: 'Falling',\n                parameters: {\n                    // speed: change.speed,\n                }\n            }\n        }\n\n        return null\n    }\n\n    private static calcChange(data1: Data, data2: Data): Change {\n        const xChange = data1.xPos - data2.xPos\n        const yChange = data1.yPos - data2.yPos\n\n        return {\n            x: xChange,\n            y: yChange,\n            speed: (xChange ** 2 + yChange ** 2) ** 0.5,\n        }\n    }\n}\n","import {Body, Composite} from 'matter-js'\n\nimport Brain, { BrainEvent } from './Brain'\n\ntype IntervalId = number | undefined\n\ndeclare global {\n    interface Window { analytics: any; }\n}\n\nconst measureDelay = 500\nconst maxMeasurements = 9\n\nexport type Data = {\n    xPos: number\n    yPos: number\n}\n\nexport default class Tracker {\n    private static draggingState: Data[] = []\n    private static droppedState: Data[] = []\n    private static trackDragging: IntervalId;\n    private static trackDropped: IntervalId;\n\n    public static dragStarted(composite: Composite, body: Body): void {\n        this.draggingState = [this.bodyToData(body)]\n        window.clearInterval(this.trackDragging)\n        this.trackDragging = window.setInterval(() => {\n            const nextBody = Composite.get(composite, body.id, 'body') as Body\n            this.draggingState.push(this.bodyToData(nextBody))\n            const event = Brain.findDraggingSignificance(this.draggingState)\n            if (event) {\n                window.analytics.track(event.type, event.parameters)\n                console.log('Tracked:')\n                console.table(event)\n            }\n            // don't keep tracking once something falls\n            if (this.draggingState.length > maxMeasurements || this.shouldStopTracking(event)) {\n                window.clearInterval(this.trackDragging)\n            }\n        }, measureDelay)\n    }\n\n    public static dragEnded(composite: Composite, body: Body): void {\n        this.draggingState = []\n        window.clearInterval(this.trackDragging)\n        this.droppedState = [this.bodyToData(body)]\n        window.clearInterval(this.trackDropped)\n        this.trackDropped = window.setInterval(() => {\n            const nextBody = Composite.get(composite, body.id, 'body') as Body\n            this.droppedState.push(this.bodyToData(nextBody))\n            const event = Brain.findDroppedSignificance(this.droppedState)\n            if (event) {\n                window.analytics.track(event.type, event.parameters)\n                console.log('Tracked:')\n                console.table(event)\n            }\n            if (this.droppedState.length > maxMeasurements || this.shouldStopTracking(event)) {\n                window.clearInterval(this.trackDropped)\n            }\n        }, 1000)\n    }\n\n    private static bodyToData(body: Body): Data {\n        return {\n            xPos: body.position.x,\n            yPos: body.position.y,\n        }\n    }\n\n    private static shouldStopTracking(event: BrainEvent | null) {\n        console.log(event?.type)\n        return event?.type === 'Falling' || event?.type === 'JustDropped'\n    }\n}\n","import React, { useEffect, useRef } from \"react\"\nimport {Bodies, Common, Composites, Engine, Events, Mouse, MouseConstraint, Render, Runner, World} from \"matter-js\"\n\nimport Tracker from './Tracker.ts'\n\n// fix issue with matter vertices requirement\nimport decomp from 'poly-decomp';\nwindow.decomp = decomp;\n\nconst blockWidth = 80\n// const blockHeight = 80\nconst stackColumns = 6\nconst stackRows = 4\nconst stackWidth = stackColumns * blockWidth\n// const stackHeight = stackRows * blockHeight\n\nconst wallThickness = 100\n// so high that when blocks are flung really high, they still can't escape over side wall\nconst wallHeight = 10_000\n\nexport const Blocks = () => {\n    const boxRef = useRef(null)\n    const canvasRef = useRef(null)\n    useEffect(() => {\n        // TODO allow window resize to resize canvas width / height\n        if (boxRef.current === null) {\n            return\n        }\n\n        const boxWidth = boxRef.current.offsetWidth\n        const boxHeight = boxRef.current.offsetHeight\n        const boxCenter = boxWidth / 2\n        const stackLeft = boxCenter - stackWidth / 2\n\n        const engine = Engine.create()\n        const world = engine.world\n        const render = Render.create({\n            element: boxRef.current || undefined,\n            engine: engine,\n            canvas: canvasRef.current || undefined,\n            options: {\n                width: boxWidth,\n                height: boxHeight,\n                background: \"rgba(255, 0, 0, 0.5)\",\n                wireframes: false,\n            },\n        })\n        Render.run(render)\n        // create runner\n        var runner = Runner.create();\n        Runner.run(runner, engine);\n\n\n        // add walls\n        World.add(world, [\n            Bodies.rectangle(boxCenter, boxHeight, boxWidth, wallThickness, { isStatic: true }),\n            Bodies.rectangle(-wallThickness / 2, boxHeight / 2, wallThickness, wallHeight, { isStatic: true }),\n            Bodies.rectangle(boxWidth + wallThickness / 2, boxHeight / 2, wallThickness, wallHeight, { isStatic: true })\n        ]);\n\n        // // add bodies\n        // const stack = Composites.stack(stackLeft, 50, stackColumns, stackRows, 0, 0, (x, y) => {\n        //     return Bodies.rectangle(x, y, blockWidth, blockHeight);\n        // });\n\n        // World.add(world, stack);\n        const square = [{x: 80, y: 0}, {x: 80, y: 80}, {x: 0, y: 80}, {x: 0, y: 0}]\n        const arrow = [{x: 40, y: 0}, {x: 40, y: 20}, {x: 100, y: 20}, {x: 100, y: 80}, {x: 40, y: 80}, {x: 40, y: 100}, {x: 0, y: 50}]\n        const chevron = [{x: 100, y: 0}, {x: 75, y: 50}, {x: 100, y: 100}, {x: 25, y: 100}, {x: 0, y: 50}, {x: 25, y: 0}]\n        const star = [{x: 50, y: 0}, {x: 63, y: 38}, {x: 100, y: 38}, {x: 69, y: 59}, {x: 82, y: 100}, {x: 50, y: 75}, {x: 18, y: 100}, {x: 31, y: 59}, {x: 0, y: 38}, {x: 37, y: 38}]\n        // const horseShoe = [{x: 35, y: 7}, {x: 19, y: 17}, {x: 14, y: 38}, {x: 14, y: 58}, {x: 25, y: 79}, {x: 45, y: 85}, {x: 65, y: 84}, {x: 65, y: 66}, {x: 46, y: 67}, {x: 34, y: 59}, {x: 30, y: 44}, {x: 33, y: 29}, {x: 45, y: 23}, {x: 66, y: 23}, {x: 66, y: 7}, {x: 53, y: 7}]\n\n        // TODO: make this irregular stack centered\n        const stack = Composites.stack(stackLeft, 50, stackColumns, stackRows, 0, 0, function(x, y) {\n            var color = Common.choose(['#556270', '#4ECDC4', '#C7F464', '#FF6B6B', '#C44D58']);\n            return Bodies.fromVertices(x, y, Common.choose([square, square, arrow, chevron, star]), {\n                render: {\n                    fillStyle: color,\n                    strokeStyle: color,\n                    lineWidth: 1\n                }\n            }, true);\n        });\n\n        World.add(world, stack);\n\n        // add mouse control\n        const mouse = Mouse.create(render.canvas)\n        const mouseConstraint = MouseConstraint.create(engine, {\n            mouse: mouse,\n            constraint: {\n                stiffness: 0.2,\n                render: {\n                    visible: false\n                }\n            }\n        });\n        World.add(world, mouseConstraint);\n\n        // not sure what this does but commented out and no change\n        // keep the mouse in sync with rendering\n        render.mouse = mouse;\n\n        // track the item to see if it's doing anything interesting\n        Events.on(mouseConstraint, 'enddrag', function(event) {\n            Tracker.dragEnded(stack, event.body)\n        });\n\n        Events.on(mouseConstraint, 'startdrag', function(event) {\n            Tracker.dragStarted(stack, event.body)\n        });\n\n        Engine.run(engine)\n    }, [])\n    return (\n        <div\n            ref={boxRef}\n            style={{\n                width: \"100%\",\n                height: \"100%\",\n            }}\n        >\n        <canvas ref={canvasRef} />\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport './Blocks';\nimport { Blocks } from './Blocks';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Stack the blocks :D !\n      </header>\n      <div className=\"App-content\">\n        <Blocks></Blocks>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Client from 'twilio-chat';\nimport { Channel } from 'twilio-chat/lib/channel';\n\nimport './index.css';\nimport { user } from './user';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst serverHost = 'https://kdavh-github-io-prod-9942.twil.io'\nconst chatChannelName = 'general'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nlet chatClient: Client;\nlet chatChannel: Channel;\n\n// Set up channel after it has been found\nasync function setupChannel(chatChannel: Channel): Promise<any> {\n  let joinPromise = Promise.resolve();\n  try {\n    await chatChannel.getMemberByIdentity(user);\n  } catch (e) {\n    // Join the general channel\n    await chatChannel.join();\n    console.log('Joined channel as '\n    + '<span class=\"me\">' + user + '</span>.', true);\n  }\n\n  // Listen for new messages sent to the channel\n  chatChannel.on('messageAdded', function(message) {\n    console.log('New message, yay!!');\n    console.log(message.author, message.body);\n    const commentElement = document.querySelector('#comment-space')\n    if (commentElement) {\n      commentElement.innerHTML = `<div>${message.body}</div>`;\n    }\n  });\n}\n\nfunction createOrJoinChatChannel(chatClient: Client): Promise<any> {\n  // Get the general chat channel, which is where all the messages are\n  // sent in this simple application\n  // print('Attempting to join \"general\" chat channel...');\n  return chatClient.getChannelByUniqueName(chatChannelName)\n  .then(function(channel) {\n    chatChannel = channel;\n    console.log('Found general channel:');\n    console.log(chatChannel);\n    setupChannel(chatChannel);\n  }).catch(function() {\n    // If it doesn't exist, let's create it\n    console.log('Creating general channel');\n    chatClient.createChannel({\n      uniqueName: chatChannelName,\n      friendlyName: 'The Chat Channel',\n    }).then(function(channel) {\n      console.log('Created general channel:');\n      console.log(channel);\n      chatChannel = channel;\n      return setupChannel(chatChannel);\n    }).catch(function(channel) {\n      console.log('Channel could not be created:');\n      console.log(channel);\n    });\n  });\n}\n\nfunction refreshToken(identity: string) {\n  console.log('Token about to expire');\n  // Make a secure request to your backend to retrieve a refreshed access token.\n  // Use an authentication mechanism to prevent token exposure to 3rd parties.\n  fetch(`${serverHost}/token?blockchatUser=${user}`)\n  .then((r) => r.json())\n  .then((data) => {\n    chatClient.updateToken(data.token);\n  });\n}\n\nfetch(`${serverHost}/token?blockchatUser=${user}`)\n  .then((r) => r.json())\n  .then((data) => {\n    console.log('Received token response:');\n    console.log(data);\n    // Initialize the Chat client\n    Client.create(data.token).then(client => {\n      console.log('Created chat client');\n      chatClient = client;\n      chatClient.getSubscribedChannels()\n        .then(() => createOrJoinChatChannel(chatClient));\n\n      // when the access token is about to expire, refresh it\n      chatClient.on('tokenAboutToExpire', function() {\n        refreshToken(user);\n      });\n\n      // if the access token already expired, refresh it\n      chatClient.on('tokenExpired', function() {\n        refreshToken(user);\n      });\n\n    console.log('You have been assigned a random username of: '\n    + '<span class=\"me\">' + user + '</span>', true);\n\n    }).catch(error => {\n      console.error(error);\n      console.log('There was an error creating the chat client:<br/>' + error, true);\n      console.log('Please check your .env file.', false);\n    });\n  });\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n"],"sourceRoot":""}